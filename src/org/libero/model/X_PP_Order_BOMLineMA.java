/******************************************************************************
 * Product: iDempiere ERP & CRM Smart Business Solution * Copyright (C)
 * 1999-2012 ComPiere, Inc. All Rights Reserved. * This program is free
 * software, you can redistribute it and/or modify it * under the terms version
 * 2 of the GNU General Public License as published * by the Free Software
 * Foundation. This program is distributed in the hope * that it will be useful,
 * but WITHOUT ANY WARRANTY, without even the implied * warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. * See the GNU General
 * Public License for more details. * You should have received a copy of the GNU
 * General Public License along * with this program, if not, write to the Free
 * Software Foundation, Inc., * 59 Temple Place, Suite 330, Boston, MA
 * 02111-1307 USA. * For the text or an alternative of this public license, you
 * may reach us * ComPiere, Inc., 2620 Augustine Dr. #245, Santa Clara, CA
 * 95054, USA * or via info@compiere.org or http://www.compiere.org/license.html
 * *
 *****************************************************************************/
/** Generated Model - DO NOT CHANGE */
package org.libero.model;

import java.math.BigDecimal;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.Properties;
import org.compiere.model.*;
import org.compiere.util.Env;

/**
 * Generated Model for PP_Order_BOMLineMA
 * 
 * @author iDempiere (generated)
 * @version Release 7.1 - $Id$
 */
public class X_PP_Order_BOMLineMA extends PO implements I_PP_Order_BOMLineMA, I_Persistent
{

	/**
	 *
	 */
	private static final long serialVersionUID = 20210609L;

	/** Standard Constructor */
	public X_PP_Order_BOMLineMA(Properties ctx, int PP_Order_BOMLineMA_ID, String trxName)
	{
		super(ctx, PP_Order_BOMLineMA_ID, trxName);
		/**
		 * if (PP_Order_BOMLineMA_ID == 0) { setM_AttributeSetInstance_ID (0);
		 * setMovementQty (Env.ZERO); // 1 setPP_Order_BOMLine_ID (0); }
		 */
	}

	/** Load Constructor */
	public X_PP_Order_BOMLineMA(Properties ctx, ResultSet rs, String trxName)
	{
		super(ctx, rs, trxName);
	}

	/**
	 * AccessLevel
	 * 
	 * @return 1 - Org
	 */
	protected int get_AccessLevel()
	{
		return accessLevel.intValue();
	}

	/** Load Meta Data */
	protected POInfo initPO(Properties ctx)
	{
		POInfo poi = POInfo.getPOInfo(ctx, Table_ID, get_TrxName());
		return poi;
	}

	public String toString()
	{
		StringBuffer sb = new StringBuffer("X_PP_Order_BOMLineMA[").append(get_ID()).append("]");
		return sb.toString();
	}

	/**
	 * Set Date Material Policy.
	 * 
	 * @param DateMaterialPolicy Time used for LIFO and FIFO Material Policy
	 */
	public void setDateMaterialPolicy(Timestamp DateMaterialPolicy)
	{
		set_ValueNoCheck(COLUMNNAME_DateMaterialPolicy, DateMaterialPolicy);
	}

	/**
	 * Get Date Material Policy.
	 * 
	 * @return Time used for LIFO and FIFO Material Policy
	 */
	public Timestamp getDateMaterialPolicy()
	{
		return (Timestamp) get_Value(COLUMNNAME_DateMaterialPolicy);
	}

	/**
	 * Set Auto Generated.
	 * 
	 * @param IsAutoGenerated Auto Generated
	 */
	public void setIsAutoGenerated(boolean IsAutoGenerated)
	{
		set_ValueNoCheck(COLUMNNAME_IsAutoGenerated, Boolean.valueOf(IsAutoGenerated));
	}

	/**
	 * Get Auto Generated.
	 * 
	 * @return Auto Generated
	 */
	public boolean isAutoGenerated()
	{
		Object oo = get_Value(COLUMNNAME_IsAutoGenerated);
		if (oo != null)
		{
			if (oo instanceof Boolean)
				return ((Boolean) oo).booleanValue();
			return "Y".equals(oo);
		}
		return false;
	}

	public I_M_AttributeSetInstance getM_AttributeSetInstance() throws RuntimeException
	{
		return (I_M_AttributeSetInstance) MTable.get(getCtx(), I_M_AttributeSetInstance.Table_Name)
				.getPO(getM_AttributeSetInstance_ID(), get_TrxName());
	}

	/**
	 * Set Attribute Set Instance.
	 * 
	 * @param M_AttributeSetInstance_ID Product Attribute Set Instance
	 */
	public void setM_AttributeSetInstance_ID(int M_AttributeSetInstance_ID)
	{
		if (M_AttributeSetInstance_ID < 0)
			set_ValueNoCheck(COLUMNNAME_M_AttributeSetInstance_ID, null);
		else
			set_ValueNoCheck(COLUMNNAME_M_AttributeSetInstance_ID, Integer.valueOf(M_AttributeSetInstance_ID));
	}

	/**
	 * Get Attribute Set Instance.
	 * 
	 * @return Product Attribute Set Instance
	 */
	public int getM_AttributeSetInstance_ID()
	{
		Integer ii = (Integer) get_Value(COLUMNNAME_M_AttributeSetInstance_ID);
		if (ii == null)
			return 0;
		return ii.intValue();
	}

	/**
	 * Set Movement Quantity.
	 * 
	 * @param MovementQty Quantity of a product moved.
	 */
	public void setMovementQty(BigDecimal MovementQty)
	{
		set_Value(COLUMNNAME_MovementQty, MovementQty);
	}

	/**
	 * Get Movement Quantity.
	 * 
	 * @return Quantity of a product moved.
	 */
	public BigDecimal getMovementQty()
	{
		BigDecimal bd = (BigDecimal) get_Value(COLUMNNAME_MovementQty);
		if (bd == null)
			return Env.ZERO;
		return bd;
	}

	public org.libero.tables.I_PP_Order_BOMLine getPP_Order_BOMLine() throws RuntimeException
	{
		return (org.libero.tables.I_PP_Order_BOMLine) MTable
				.get(getCtx(), org.eevolution.model.I_PP_Order_BOMLine.Table_Name)
				.getPO(getPP_Order_BOMLine_ID(), get_TrxName());
	}

	/**
	 * Set Manufacturing Order BOM Line.
	 * 
	 * @param PP_Order_BOMLine_ID Manufacturing Order BOM Line
	 */
	public void setPP_Order_BOMLine_ID(int PP_Order_BOMLine_ID)
	{
		if (PP_Order_BOMLine_ID < 1)
			set_ValueNoCheck(COLUMNNAME_PP_Order_BOMLine_ID, null);
		else
			set_ValueNoCheck(COLUMNNAME_PP_Order_BOMLine_ID, Integer.valueOf(PP_Order_BOMLine_ID));
	}

	/**
	 * Get Manufacturing Order BOM Line.
	 * 
	 * @return Manufacturing Order BOM Line
	 */
	public int getPP_Order_BOMLine_ID()
	{
		Integer ii = (Integer) get_Value(COLUMNNAME_PP_Order_BOMLine_ID);
		if (ii == null)
			return 0;
		return ii.intValue();
	}

	/**
	 * Set PP_Order_BOMLineMA_UU.
	 * 
	 * @param PP_Order_BOMLineMA_UU PP_Order_BOMLineMA_UU
	 */
	public void setPP_Order_BOMLineMA_UU(String PP_Order_BOMLineMA_UU)
	{
		set_Value(COLUMNNAME_PP_Order_BOMLineMA_UU, PP_Order_BOMLineMA_UU);
	}

	/**
	 * Get PP_Order_BOMLineMA_UU.
	 * 
	 * @return PP_Order_BOMLineMA_UU
	 */
	public String getPP_Order_BOMLineMA_UU()
	{
		return (String) get_Value(COLUMNNAME_PP_Order_BOMLineMA_UU);
	}
}